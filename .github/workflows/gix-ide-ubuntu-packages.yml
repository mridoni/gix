name: gix-ide-ubuntu-packages

on:
  workflow_dispatch
  
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]

env:
  GIX_VER_GIXIDEMAJ: 1
  GIX_VER_GIXIDEMIN: 1
  GIX_VER_GIXIDEREL: 0
  GIX_VER_GIXIDEBLD: ${{ github.run_id }}
  GIX_SQL_VERSION: 1.0.19

permissions:
  contents: read

jobs:
  ubuntu-20-04-x64:
    name: ubuntu-20.04-x64
    env:
      BUILD_CONFIGURATION: Release
      BUILD_PLATFORM: x64      
      HOST_PLATFORM: x64    
    runs-on: ubuntu-20.04
    
    steps:
    - uses: actions/checkout@v3
      with:
          repository: 'mridoni/gix'
          ref: main
          submodules: true
    
    - uses: awalsh128/cache-apt-pkgs-action@latest
      with:
          packages: build-essential qtbase5-dev libqt5xmlpatterns5-dev libqtermwidget5-0-dev libdwarf-dev libelfin-dev qttools5-dev qttools5-dev-tools libmysqlclient-dev libpq-dev unixodbc-dev flex libnng-dev libspdlog-dev libfmt-dev
          version: 1.0

    - name: Build
      shell: bash
      working-directory: ${{ github.workspace }}
      env:
          QTDIR: ${{env.Qt5_Dir}}
      run: |
        echo "BUILD_PLATFORM     : ${{env.BUILD_PLATFORM}}"
        echo "BUILD_CONFIGURATION: ${{env.BUILD_CONFIGURATION}}"
        echo "#define VERSION \"${{ env.GIX_SQL_VERSION }}\"" > gixsql/config.h
        wget http://ftp.debian.org/debian/pool/main/b/bison/bison_3.7.5+dfsg-1_amd64.deb
        sudo dpkg -i bison_3.7.5+dfsg-1_amd64.deb
        cp gix-ide/GixVersion.h.tpl gix-ide/GixVersion.h
        sed -i 's/{GIXIDEMAJ}/${{env.GIX_VER_GIXIDEMAJ}}/' gix-ide/GixVersion.h
        sed -i 's/{GIXIDEMIN}/${{env.GIX_VER_GIXIDEMIN}}/' gix-ide/GixVersion.h
        sed -i 's/{GIXIDEREL}/${{env.GIX_VER_GIXIDEREL}}/' gix-ide/GixVersion.h
        sed -i 's/{GIXIDEBLD}/${{env.GIX_VER_GIXIDEBLD}}/' gix-ide/GixVersion.h
        chmod 755 ./prepbuild.sh && ./prepbuild.sh
        qmake CONFIG+=${{env.BUILD_CONFIGURATION}}
        make
    
    - name: Build package
      shell: bash
      working-directory: ${{ github.workspace }}
      env:
        WORKSPACE: ${{ github.workspace }}
        HOST_PLATFORM: ${{ env.HOST_PLATFORM }}
        DIST: ubuntu-20.04-lts
        GIXIDEMAJ: ${{ env.GIX_VER_GIXIDEMAJ }}
        GIXIDEMIN: ${{ env.GIX_VER_GIXIDEMIN }}
        GIXIDEREL: ${{ env.GIX_VER_GIXIDEREL }}
        GIX_REVISION: ${{ env.GIX_VER_GIXIDEBLD }}
      run: |
        chmod 755 ${{ github.workspace }}/deploy/installers/linux/mkdeb.sh && ${{ github.workspace }}/deploy/installers/linux/mkdeb.sh
    
    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      env:
        WORKSPACE: ${{ github.workspace }}
        HOST_PLATFORM: ${{ env.HOST_PLATFORM }}
        DIST: ubuntu-20.04-lts
        GIXIDEMAJ: ${{ env.GIX_VER_GIXIDEMAJ }}
        GIXIDEMIN: ${{ env.GIX_VER_GIXIDEMIN }}
        GIXIDEREL: ${{ env.GIX_VER_GIXIDEREL }}
        GIX_REVISION: ${{ env.GIX_VER_GIXIDEBLD }}      
      with:
        name: gix-ide-${{ env.DIST }}-${{ env.HOST_PLATFORM }}-${{ env.GIXIDEMAJ}}.${{ env.GIXIDEMIN}}.${{ env.GIXIDEREL}}-${{ env.GIX_REVISION}}
        path: |
          gix-ide-${{ env.DIST }}-${{ env.HOST_PLATFORM }}-${{ env.GIXIDEMAJ}}.${{ env.GIXIDEMIN}}.${{ env.GIXIDEREL}}-${{ env.GIX_REVISION}}.deb


  ubuntu-22-04-x64:
    name: ubuntu-22.04-x64
    env:
      BUILD_CONFIGURATION: Release
      BUILD_PLATFORM: x64      
      HOST_PLATFORM: x64    
    runs-on: ubuntu-22.04
    
    steps:
    - uses: actions/checkout@v3
      with:
          repository: 'mridoni/gix'
          ref: main
          submodules: true
    
    - uses: awalsh128/cache-apt-pkgs-action@latest
      with:
          packages: build-essential qtbase5-dev libqt5xmlpatterns5-dev libqtermwidget5-0-dev libdwarf-dev libelfin-dev qttools5-dev qttools5-dev-tools libmysqlclient-dev libpq-dev unixodbc-dev flex libnng-dev libspdlog-dev libfmt-dev
          version: 1.0

    - name: Build
      shell: bash
      working-directory: ${{ github.workspace }}
      env:
          QTDIR: ${{env.Qt5_Dir}}
      run: |
        echo "BUILD_PLATFORM     : ${{env.BUILD_PLATFORM}}"
        echo "BUILD_CONFIGURATION: ${{env.BUILD_CONFIGURATION}}"
        echo "#define VERSION \"${{ env.GIX_SQL_VERSION }}\"" > gixsql/config.h
        wget http://ftp.debian.org/debian/pool/main/b/bison/bison_3.7.5+dfsg-1_amd64.deb
        sudo dpkg -i bison_3.7.5+dfsg-1_amd64.deb
        cp gix-ide/GixVersion.h.tpl gix-ide/GixVersion.h
        sed -i 's/{GIXIDEMAJ}/${{env.GIX_VER_GIXIDEMAJ}}/' gix-ide/GixVersion.h
        sed -i 's/{GIXIDEMIN}/${{env.GIX_VER_GIXIDEMIN}}/' gix-ide/GixVersion.h
        sed -i 's/{GIXIDEREL}/${{env.GIX_VER_GIXIDEREL}}/' gix-ide/GixVersion.h
        sed -i 's/{GIXIDEBLD}/${{env.GIX_VER_GIXIDEBLD}}/' gix-ide/GixVersion.h
        chmod 755 ./prepbuild.sh && ./prepbuild.sh
        qmake CONFIG+=${{env.BUILD_CONFIGURATION}}
        make
    
    - name: Build package
      shell: bash
      working-directory: ${{ github.workspace }}
      env:
        WORKSPACE: ${{ github.workspace }}
        HOST_PLATFORM: ${{ env.HOST_PLATFORM }}
        DIST: ubuntu-22.04-lts
        GIXIDEMAJ: ${{ env.GIX_VER_GIXIDEMAJ }}
        GIXIDEMIN: ${{ env.GIX_VER_GIXIDEMIN }}
        GIXIDEREL: ${{ env.GIX_VER_GIXIDEREL }}
        GIX_REVISION: ${{ env.GIX_VER_GIXIDEBLD }}
      run: |
        chmod 755 ${{ github.workspace }}/deploy/installers/linux/mkdeb.sh && ${{ github.workspace }}/deploy/installers/linux/mkdeb.sh
    
    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      env:
        WORKSPACE: ${{ github.workspace }}
        HOST_PLATFORM: ${{ env.HOST_PLATFORM }}
        DIST: ubuntu-22.04-lts
        GIXIDEMAJ: ${{ env.GIX_VER_GIXIDEMAJ }}
        GIXIDEMIN: ${{ env.GIX_VER_GIXIDEMIN }}
        GIXIDEREL: ${{ env.GIX_VER_GIXIDEREL }}
        GIX_REVISION: ${{ env.GIX_VER_GIXIDEBLD }}      
      with:
        name: gix-ide-${{ env.DIST }}-${{ env.HOST_PLATFORM }}-${{ env.GIXIDEMAJ}}.${{ env.GIXIDEMIN}}.${{ env.GIXIDEREL}}-${{ env.GIX_REVISION}}
        path: |
          gix-ide-${{ env.DIST }}-${{ env.HOST_PLATFORM }}-${{ env.GIXIDEMAJ}}.${{ env.GIXIDEMIN}}.${{ env.GIXIDEREL}}-${{ env.GIX_REVISION}}.deb

